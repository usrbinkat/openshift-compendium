{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/troubleshooting/collect-tcpdump/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Collecting a tcpdump from a pod\",\n  \"tags\": [\"Openshift 4\", \"Networking\", \"Troubleshooting\", \"tcpdump\"],\n  \"emoji\": \"ðŸ”Œ\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"collecting-a-tcpdump-from-a-pod-using-only-oc\"\n  }, \"Collecting a tcpdump from a pod using only \", mdx(\"inlineCode\", {\n    parentName: \"h1\"\n  }, \"oc\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Identify the namespace and pod that you wish to trace.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Determine the tcpdump filter and/or parameters you wish to use.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Modify the script below to match the desired namespace, pod, and tcpdump parameters to use.  \"))), mdx(\"p\", null, \"Note: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tcpdump\"), \" will output data to the console.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"TRACE_NS=openshift-dns\\nTRACE_POD=dns-default-4mqsd\\n\\nrun_on_host() {\\n    oc debug node/$NODE -- chroot /host $@\\n}\\n\\nrun_in_toolbox() {\\n    oc debug node/$NODE -- $@\\n}\\n\\nNODE=`oc get pod -n $TRACE_NS $TRACE_POD -o=jsonpath='{.spec.nodeName}'`\\n\\nCID=`oc get pods -n $TRACE_NS $TRACE_POD --template '{{printf \\\"%.21s\\\" (index .status.containerStatuses 0).containerID}}{{\\\"\\\\n\\\"}}' | sed -e 's|cri-o://||'`\\nPID=$(run_on_host crictl inspect -o yaml $CID | grep 'pid:' | awk '{print $2}')\\nrun_in_toolbox nsenter -n -t $PID -- tcpdump -nn port 53 | tee tcpdump.log\\n\")), mdx(\"h1\", {\n    \"id\": \"collecting-a-pcap\"\n  }, \"Collecting a pcap\"), mdx(\"p\", null, \"Collecting a pcap is a very similar process.  The primary different is storing the pcap to the node and then copying it back.  For example:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"run_in_toolbox nsenter -n -t $PID -- tcpdump -s 65535 -w /host/tmp/out.pcap\\nrun_in_toolbox cat /host/tmp/out.pcap > out.pcap\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Collecting a tcpdump from a pod","tags":["Openshift 4","Networking","Troubleshooting","tcpdump"],"emoji":"ðŸ”Œ","link":null},"fields":{"slug":"/troubleshooting/collect-tcpdump/"},"tableOfContents":{"items":[{"url":"#collecting-a-tcpdump-from-a-pod-using-only-oc","title":"Collecting a tcpdump from a pod using only oc"},{"url":"#collecting-a-pcap","title":"Collecting a pcap"}]},"parent":{"__typename":"File","relativePath":"troubleshooting/collect-tcpdump.md"}}},"pageContext":{"id":"b9446b3e-a359-5de6-9b24-98c26520999f","previous":{"id":"cff05da2-1b34-556c-a20a-d9d54ba45584","frontmatter":{"title":"Debug node","tags":["Openshift 4","Troubleshooting"]},"fields":{"slug":"/troubleshooting/debug-node/"}},"next":{"id":"2e7a80bd-7eac-5d16-adba-910691d23c79","frontmatter":{"title":"Edit qcow2 image with virt-edit","tags":["Openshift 4","Installation"]},"fields":{"slug":"/ocp4-installation/modify-qcow2-image/"}},"hasUntagged":false,"basePath":"/"}},"staticQueryHashes":["1437003973","2744905544","3664657028","467212769","467212769"]}