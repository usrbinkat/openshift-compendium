{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/machine-config/modify-mtu/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Modify MTU in a second interface in workers\",\n  \"tags\": [\"Openshift 4\", \"Configuration\", \"Admin Tasks\"],\n  \"emoji\": \"ðŸ¦™\",\n  \"link\": \"https://docs.openshift.com/container-platform\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"modify-mtu-in-a-second-interface-in-workers\"\n  }, \"Modify MTU in a second interface in workers\"), mdx(\"p\", null, \"Sometimes a storage network interface is attached to nodes in order to reach an external storage. In order to improve the performance, you could need to modify the MTU in those interfaces to 9000 (aka. jumboframes)\"), mdx(\"p\", null, \"You can do that adding a script for the NetworkManager service in the /etc/NetworkManager/dispatcher.d/ path. But if SELinux is enabled in your installation you could have errors when NetworkManager runs that script. To fix it, you should add a new one-shot systemd service to modify the context.\"), mdx(\"p\", null, \"In this example the MTU of the ens4 interface will change to 9000 to enable jumboframes:\"), mdx(\"p\", null, \"This is the script (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/NetworkManager/dispatcher.d/30-mtu\"), \") for the NetworkManager.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"#!/bin/sh\\nMTU=9000\\nINTERFACE=ens4\\n\\nIFACE=$1\\nSTATUS=$2\\nif [ \\\"$IFACE\\\" = \\\"$INTERFACE\\\" -a \\\"$STATUS\\\" = \\\"up\\\" ]; then\\n    ip link set \\\"$IFACE\\\" mtu $MTU\\nfi\\n\")), mdx(\"p\", null, \"We need to encode in base64 and paste the result in the machine-config\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"$ cat 30-mtu | base64 -w0\\nIyEvYmluL3NoCk1UVT05MDAwCklOVEVSRkFDRT1lbnM0CgpJRkFDRT0kMQpTVEFUVVM9JDIKaWYgWyAiJElGQUNFIiA9ICIkSU5URVJGQUNFIiAtYSAiJFNUQVRVUyIgPSAidXAiIF07IHRoZW4KICAgIGlwIGxpbmsgc2V0ICIkSUZBQ0UiIG10dSAkTVRVCmZpCg==\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"cat << EOF | oc create -f -\\nkind: MachineConfig\\napiVersion: machineconfiguration.openshift.io/v1\\nmetadata:\\n  name: 99-worker-mtu\\n  creationTimestamp: \\n  labels:\\n    machineconfiguration.openshift.io/role: worker\\nspec:\\n  osImageURL: ''\\n  config:\\n    ignition:\\n      version: 2.2.0\\n    storage:\\n      files:\\n      - filesystem: root\\n        path: \\\"/etc/NetworkManager/dispatcher.d/30-mtu\\\"\\n        contents:\\n          source: data:text/plain;charset=utf-8;base64,IyEvYmluL3NoCk1UVT05MDAwCklOVEVSRkFDRT1lbnM0CgpJRkFDRT0kMQpTVEFUVVM9JDIKaWYgWyAiJElGQUNFIiA9ICIkSU5URVJGQUNFIiAtYSAiJFNUQVRVUyIgPSAidXAiIF07IHRoZW4KICAgIGlwIGxpbmsgc2V0ICIkSUZBQ0UiIG10dSAkTVRVCmZpCg==\\n          verification: {}\\n        mode: 0755\\n    systemd:\\n      units:\\n        - contents: |\\n            [Unit]\\n            Requires=systemd-udevd.target\\n            After=systemd-udevd.target\\n            Before=NetworkManager.service\\n            DefaultDependencies=no\\n            [Service]\\n            Type=oneshot\\n            ExecStart=/usr/sbin/restorecon /etc/NetworkManager/dispatcher.d/30-mtu\\n            [Install]\\n            WantedBy=multi-user.target\\n          name: one-shot-mtu.service\\n          enabled: true\\n\\nEOF\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Modify MTU in a second interface in workers","tags":["Openshift 4","Configuration","Admin Tasks"],"emoji":"ðŸ¦™","link":"https://docs.openshift.com/container-platform"},"fields":{"slug":"/machine-config/modify-mtu/"},"tableOfContents":{"items":[{"url":"#modify-mtu-in-a-second-interface-in-workers","title":"Modify MTU in a second interface in workers"}]},"parent":{"__typename":"File","relativePath":"machine-config/modify-mtu.md"}}},"pageContext":{"id":"8a22a68b-7f4f-553a-858a-7fb8594b481f","previous":{"id":"17f6a17e-fde6-5ab9-93dd-29f642a9dc35","frontmatter":{"title":"NTP configuration","tags":["Openshift 4","Configuration"]},"fields":{"slug":"/machine-config/ntp-configuration/"}},"next":{"id":"9e88e420-cb70-55ec-b1cb-e93dc512d7ed","frontmatter":{"title":"Kubelet logging verbosity","tags":["Openshift 4","Configuration"]},"fields":{"slug":"/machine-config/kubelet-logging/"}},"hasUntagged":false,"basePath":"/"}},"staticQueryHashes":["1437003973","2744905544","3664657028","467212769","467212769"]}